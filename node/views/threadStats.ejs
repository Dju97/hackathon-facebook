<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>Messenger Stats</title>

    <!-- Custom styles for this template -->
    <link href="https://fonts.googleapis.com/css?family=Playfair+Display:700,900" rel="stylesheet">
    <!-- <link href="{% static 'css/blog.css' %}" rel="stylesheet"> -->
    <!-- <link href="{% static 'css/dist.min.css' %}" rel="stylesheet"> -->
    <link href="css/dist.min.css" rel="stylesheet">
    <link href="css/blog.css" rel="stylesheet">
  </head>

  <body onload='draw()'>
    <div class="container">
            <header class="blog-header py-3">
            <div class="row flex-nowrap justify-content-center align-items-center">
                <div class="col-4 text-center">
                <a class="blog-header-logo text-dark" href="#">
                    <h1>
                            Messenger Stats
                    </h1>
                </a>
                </div>
            </div>
            </header>
    <div id="mynetwork" style="height:500px"></div>

    <h3 class="mt-5">Best messages sender</h3>
    <canvas id="barChartMessageSent" width="100%" height="20"></canvas>
    <div>
        
    </div>

    <h3 class="mt-5">Best reactions giver</h3>
    <canvas id="barChartReactionsGiven" width="100%" height="20"></canvas>

    <h3 class="mt-5">Most popular sender</h3>
    <canvas id="barChartReactionsReceived" width="100%" height="20"></canvas>
    </div>
    <script src="js/jquery.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script src="js/sigma.min.js"></script>
    <script type="text/javascript">
      var ctx = document.getElementById('barChartMessageSent').getContext('2d');

      var myBarChart = new Chart(ctx, {
          type: 'horizontalBar',
          data: {
            labels: [<% sent_messages.forEach(people => { %>'<%- people[0] %>',<% }) %>],
            datasets: [{
                label: 'Messages',
                backgroundColor: '#3b5998',
                borderColor: '#3b5998',
                data: [<% sent_messages.forEach(people => { %>'<%- people[1] %>',<% }) %>]
            }]
          },
          options: {
            scales: {
                xAxes: [{
                    stacked: true
                }],
                yAxes: [{
                    stacked: true
                }]
            }
          }
      });
    </script>
    <script type="text/javascript">
        var ctx = document.getElementById('barChartReactionsGiven').getContext('2d');
    
        var myBarChart = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: [<% given_reactions.forEach(people => { %>'<%- people[0] %>',<% }) %>],
                datasets: [{
                    label: 'Reactions',
                    backgroundColor: '#3b5998',
                    borderColor: '#3b5998',
                    data: [<% given_reactions.forEach(people => { %>'<%- people[1] %>',<% }) %>]
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        stacked: true
                    }],
                    yAxes: [{
                        stacked: true
                    }]
                }
            }
        });
        </script>
    <script type="text/javascript">
    var ctx = document.getElementById('barChartReactionsReceived').getContext('2d');

    var myBarChart = new Chart(ctx, {
        type: 'horizontalBar',
        data: {
            labels: [<% received_reactions.forEach(people => { %>'<%- people[0] %>',<% }) %>],
            datasets: [{
                label: 'Reactions',
                backgroundColor: '#3b5998',
                borderColor: '#3b5998',
                data: [<% received_reactions.forEach(people => { %>'<%- people[1] %>',<% }) %>]
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    stacked: true
                }],
                yAxes: [{
                    stacked: true
                }]
            }
        }
    });
    </script>

    <script src="js/vis.js"></script>

    <script type="text/javascript">
        var nodes = null;
        var edges = null;
        var network = null;

        function draw() {
          // create people.
          // value corresponds with the age of the person
          
          nodes = [<% graph_data.nodes.forEach(node => { %><%- JSON.stringify(node) %>,<% }) %>];

          // create connections between people
          // value corresponds with the amount of contact between two people
          edges = [<% graph_data.edges.forEach(edge => { %><%- JSON.stringify(edge) %>,<% }) %>];

          // Instantiate our network object.
          var container = document.getElementById('mynetwork');
          var data = {
            nodes: nodes,
            edges: edges
          };
          var options = {
            nodes: {
              shape: 'dot',
              height: '400px',
              scaling: {
                customScalingFunction: function (min,max,total,value) {
                  return value;
                },
                min:5,
                max:50,
                // label: {
                //     min:8,
                //     max:20,
                // }
              }
            }
          };
          network = new vis.Network(container, data, options);
          console.log(network);
        }
      </script>
  </body>